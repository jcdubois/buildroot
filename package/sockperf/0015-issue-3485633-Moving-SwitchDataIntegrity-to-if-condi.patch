From 26741947e8f728eb1e0d01579d86488b3fc73c04 Mon Sep 17 00:00:00 2001
From: Alexander Grissik <agrissik@nvidia.com>
Date: Wed, 31 May 2023 17:02:27 +0300
Subject: [PATCH 15/33] issue: 3485633 Moving SwitchDataIntegrity to if
 condition

Signed-off-by: Alexander Grissik <agrissik@nvidia.com>
---
 src/client.cpp | 70 ++++++++++++++++++++++----------------------------
 src/client.h   | 14 ++++++----
 2 files changed, 40 insertions(+), 44 deletions(-)

diff --git a/src/client.cpp b/src/client.cpp
index 6cbaa1d..06b9666 100644
--- a/src/client.cpp
+++ b/src/client.cpp
@@ -698,24 +698,24 @@ ClientBase::~ClientBase() {
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
-Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+Client<IoType, SwitchCycleDuration, SwitchMsgSize,
        PongModeCare>::Client(int _fd_min, int _fd_max, int _fd_num)
     : ClientBase(), m_ioHandler(_fd_min, _fd_max, _fd_num), m_pongModeCare(m_pMsgRequest) {
     os_thread_init(&m_receiverTid);
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
-Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+Client<IoType, SwitchCycleDuration, SwitchMsgSize,
        PongModeCare>::~Client() {}
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
-void Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+void Client<IoType, SwitchCycleDuration, SwitchMsgSize,
             PongModeCare>::client_receiver_thread() {
     while (!g_b_exit) {
         client_receive();
@@ -730,9 +730,9 @@ void *client_receiver_thread(void *arg) {
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
-void Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+void Client<IoType, SwitchCycleDuration, SwitchMsgSize,
             PongModeCare>::cleanupAfterLoop() {
     usleep(100 * 1000); // 0.1 sec - wait for rx packets for last sends (in normal flow)
     if (m_receiverTid.tid) {
@@ -879,9 +879,9 @@ static int _connect_check(int ifd, int timeout_ms) {
 #undef POLL_TIMEOUT_MS
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
-int Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+int Client<IoType, SwitchCycleDuration, SwitchMsgSize,
            PongModeCare>::initBeforeLoop() {
     int rc = SOCKPERF_ERR_NONE;
     if (g_b_exit) return rc;
@@ -1048,9 +1048,9 @@ int Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
-void Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+void Client<IoType, SwitchCycleDuration, SwitchMsgSize,
             PongModeCare>::doSendThenReceiveLoop() {
     if (g_pApp->m_const_params.measurement == TIME_BASED) {
         // cycle through all set fds in the array (with wrap around to beginning)
@@ -1115,9 +1115,9 @@ void Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
-void Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+void Client<IoType, SwitchCycleDuration, SwitchMsgSize,
             PongModeCare>::doSendLoop() {
     // cycle through all set fds in the array (with wrap around to beginning)
     for (int curr_fds = m_ioHandler.m_fd_min; !g_b_exit; curr_fds = g_fds_array[curr_fds]->next_fd)
@@ -1138,9 +1138,9 @@ static inline void playbackCycleDurationWait(const TicksDuration &i_cycleDuratio
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
-void Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+void Client<IoType, SwitchCycleDuration, SwitchMsgSize,
             PongModeCare>::doPlayback() {
     static const bool is_exec_activity_info =
         (g_pApp->m_const_params.packetrate_stats_print_ratio > 0);
@@ -1176,9 +1176,9 @@ void Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
-void Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+void Client<IoType, SwitchCycleDuration, SwitchMsgSize,
             PongModeCare>::doHandler() {
     int rc = SOCKPERF_ERR_NONE;
 
@@ -1197,65 +1197,57 @@ void Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
 void client_handler(int _fd_min, int _fd_max, int _fd_num) {
-    Client<IoType, SwitchDataIntegrity, SwitchCycleDuration, SwitchMsgSize,
+    Client<IoType, SwitchCycleDuration, SwitchMsgSize,
            PongModeCare> c(_fd_min, _fd_max, _fd_num);
     c.doHandler();
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize>
 void client_handler(int _fd_min, int _fd_max, int _fd_num) {
     if (g_pApp->m_const_params.b_stream)
-        client_handler<IoType, SwitchDataIntegrity, SwitchCycleDuration,
+        client_handler<IoType, SwitchCycleDuration,
                        SwitchMsgSize, PongModeNever>(_fd_min, _fd_max, _fd_num);
     else if (g_pApp->m_const_params.reply_every == 1)
-        client_handler<IoType, SwitchDataIntegrity, SwitchCycleDuration,
+        client_handler<IoType, SwitchCycleDuration,
                        SwitchMsgSize, PongModeAlways>(_fd_min, _fd_max, _fd_num);
     else
-        client_handler<IoType, SwitchDataIntegrity, SwitchCycleDuration,
+        client_handler<IoType, SwitchCycleDuration,
                        SwitchMsgSize, PongModeNormal>(_fd_min, _fd_max, _fd_num);
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration>
 void client_handler(int _fd_min, int _fd_max, int _fd_num) {
     if (g_pApp->m_const_params.msg_size_range > 0)
-        client_handler<IoType, SwitchDataIntegrity, SwitchCycleDuration,
+        client_handler<IoType, SwitchCycleDuration,
                        SwitchOnMsgSize>(_fd_min, _fd_max, _fd_num);
     else
-        client_handler<IoType, SwitchDataIntegrity, SwitchCycleDuration,
+        client_handler<IoType, SwitchCycleDuration,
                        SwitchOff>(_fd_min, _fd_max, _fd_num);
 }
 
 //------------------------------------------------------------------------------
-template <class IoType, class SwitchDataIntegrity>
+template <class IoType>
 void client_handler(int _fd_min, int _fd_max, int _fd_num) {
     if (g_pApp->m_const_params.cycleDuration > TicksDuration::TICKS0) {
         if (g_pApp->m_const_params.dummy_mps) {
-            client_handler<IoType, SwitchDataIntegrity, SwitchOnDummySend>(
+            client_handler<IoType, SwitchOnDummySend>(
                 _fd_min, _fd_max, _fd_num);
         } else {
-            client_handler<IoType, SwitchDataIntegrity, SwitchOnCycleDuration>(
+            client_handler<IoType, SwitchOnCycleDuration>(
                 _fd_min, _fd_max, _fd_num);
         }
     } else
-        client_handler<IoType, SwitchDataIntegrity, SwitchOff>(_fd_min, _fd_max,
+        client_handler<IoType, SwitchOff>(_fd_min, _fd_max,
                                                                                    _fd_num);
 }
 
-//------------------------------------------------------------------------------
-template <class IoType> void client_handler(int _fd_min, int _fd_max, int _fd_num) {
-    if (g_pApp->m_const_params.data_integrity)
-        client_handler<IoType, SwitchOnDataIntegrity>(_fd_min, _fd_max, _fd_num);
-    else
-        client_handler<IoType, SwitchOff>(_fd_min, _fd_max, _fd_num);
-}
-
 //------------------------------------------------------------------------------
 void client_handler(handler_info *p_info) {
     if (p_info) {
diff --git a/src/client.h b/src/client.h
index 7ffaa52..507c5a6 100644
--- a/src/client.h
+++ b/src/client.h
@@ -50,7 +50,7 @@ protected:
 
 //==============================================================================
 //==============================================================================
-template <class IoType, class SwitchDataIntegrity,
+template <class IoType,
           class SwitchCycleDuration, class SwitchMsgSize, class PongModeCare>
 class Client : public ClientBase {
 private:
@@ -58,7 +58,7 @@ private:
     IoType m_ioHandler;
     addr_to_id m_ServerList;
 
-    SwitchDataIntegrity m_switchDataIntegrity; // SwitchOnDataIntegrity | SwitchOff
+    SwitchOnDataIntegrity m_switchDataIntegrity;
     SwitchOnActivityInfo m_switchActivityInfo;
     SwitchCycleDuration m_switchCycleDuration; // SwitchOnDummySend | SwitchOnCycleDuration | SwitchOff
     SwitchMsgSize m_switchMsgSize; // SwitchOnMsgSize | SwitchOff
@@ -66,7 +66,7 @@ private:
                                  // PongModeAlways, PongModeNever
 
     class ClientMessageHandlerCallback {
-        Client<IoType, SwitchDataIntegrity,
+        Client<IoType,
               SwitchCycleDuration, SwitchMsgSize, PongModeCare> &m_client;
         int m_ifd;
         struct sockaddr_store_t &m_recvfrom_addr;
@@ -74,7 +74,7 @@ private:
         int m_receiveCount;
 
     public:
-        inline ClientMessageHandlerCallback(Client<IoType, SwitchDataIntegrity,
+        inline ClientMessageHandlerCallback(Client<IoType,
                 SwitchCycleDuration, SwitchMsgSize, PongModeCare> &client,
                 int ifd, struct sockaddr_store_t &recvfrom_addr,
                 socklen_t recvfrom_addrlen) :
@@ -238,6 +238,8 @@ private:
 
     inline bool handle_message(int ifd, struct sockaddr_store_t &recvfrom_addr, socklen_t recvfrom_addrlen, int &receiveCount)
     {
+        static const bool is_exec_data_integrity = g_pApp->m_const_params.data_integrity;
+
         int serverNo = 0;
 
 #if defined(LOG_TRACE_MSG_IN) && (LOG_TRACE_MSG_IN == TRUE)
@@ -290,7 +292,9 @@ private:
             exit_with_log("Number of servers more than expected", SOCKPERF_ERR_FATAL);
         } else {
             g_pPacketTimes->setRxTime(m_pMsgReply->getSequenceCounter(), rxTime, serverNo);
-            m_switchDataIntegrity.execute(m_pMsgRequest, m_pMsgReply);
+            if (unlikely(is_exec_data_integrity)) {
+                m_switchDataIntegrity.execute(m_pMsgRequest, m_pMsgReply);
+            }
         }
 
         return true;
-- 
2.43.0

