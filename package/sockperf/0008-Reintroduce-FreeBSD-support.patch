From 69204e442b8dc9362b62bca4e2b3488cb0e60254 Mon Sep 17 00:00:00 2001
From: Wonsup Yoon <pusnow@kaist.ac.kr>
Date: Fri, 24 Feb 2023 15:29:18 +0900
Subject: [PATCH 08/33] Reintroduce FreeBSD support

---
 src/client.cpp     |  4 ++--
 src/defs.h         | 14 ++++++++++----
 src/iohandlers.cpp |  2 +-
 src/iohandlers.h   |  2 +-
 src/ip_address.h   |  4 ++--
 src/os_abstract.h  |  3 +--
 6 files changed, 17 insertions(+), 12 deletions(-)

diff --git a/src/client.cpp b/src/client.cpp
index 96af2b7..364de16 100644
--- a/src/client.cpp
+++ b/src/client.cpp
@@ -882,10 +882,10 @@ int Client<IoType, SwitchDataIntegrity, SwitchActivityInfo, SwitchCycleDuration,
             if (p_client_bind_addr->addr.sa_family != AF_UNSPEC) {
                 socklen_t client_bind_addr_len = g_pApp->m_const_params.client_bind_info_len;
                 std::string hostport = sockaddr_to_hostport(p_client_bind_addr);
-#if defined(__linux__) || defined(__APPLE__)
+#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
                 struct sockaddr_store_t unix_addr;
                 socklen_t unix_addr_len;
-#endif // defined(__linux__) || defined(__APPLE__)
+#endif // defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
                 if (p_client_bind_addr->addr.sa_family == AF_UNIX && g_pApp->m_const_params.sock_type == SOCK_DGRAM) { // Need to bind localy
 #ifdef __windows__
                     log_err("AF_UNIX with DGRAM isn't supported in windows");
diff --git a/src/defs.h b/src/defs.h
index 461468c..e5e0114 100644
--- a/src/defs.h
+++ b/src/defs.h
@@ -58,9 +58,15 @@ typedef unsigned short int sa_family_t;
 #include <sys/epoll.h>
 #endif
 
-#ifdef __APPLE__
+#if defined(__FreeBSD__) || defined(__APPLE__)
 #include <sys/event.h>
-#endif
+
+#ifdef __APPLE__
+#define EV_FLAGS (EV_ADD | EV_OOBAND)
+#else // __FreeBSD__
+#define EV_FLAGS (EV_ADD)
+#endif // __FreeBSD__
+#endif // defined(__FreeBSD__) || defined(__APPLE__)
 
 #include <stdbool.h>
 #include <stdint.h>
@@ -201,12 +207,12 @@ const uint32_t TEST_FIRST_CONNECTION_FIRST_PACKET_TTL_THRESHOLD_MSEC = 50;
         "^[UuTt]:([A-Za-z]:[\\\\/].*)[\r\n]*"
 #define RESOLVE_ADDR_FORMAT_SOCKET                                                                 \
         "[A-Za-z]:[\\\\/].*"
-#elif defined(__linux__) || defined(__APPLE__) 
+#elif defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
 #define UNIX_DOMAIN_SOCKET_FORMAT_REG_EXP                                                          \
         "^[UuTt]:(/.+)[\r\n]"
 #define RESOLVE_ADDR_FORMAT_SOCKET                                                                 \
         "/.+"
-#endif // defined(__linux__) || defined(__APPLE__) 
+#endif // defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
 
 #define PRINT_PROTOCOL(type)                                                                       \
     ((type) == SOCK_DGRAM ? "UDP" : ((type) == SOCK_STREAM ? "TCP" : "<?>"))
diff --git a/src/iohandlers.cpp b/src/iohandlers.cpp
index 2c9a3b2..742c94f 100644
--- a/src/iohandlers.cpp
+++ b/src/iohandlers.cpp
@@ -300,7 +300,7 @@ int IoKqueue::prepareNetwork() {
             for (int ifd = m_fd_min; ifd <= m_fd_max; ifd++) {
                 if (g_fds_array[ifd]) {
                     print_addresses(g_fds_array[ifd], list_count);
-                    EV_SET(&mp_kqueue_changes[m_max_events], ifd, EVFILT_READ, EV_ADD | EV_OOBAND, 0, 0, 0);
+                    EV_SET(&mp_kqueue_changes[m_max_events], ifd, EVFILT_READ, EV_FLAGS, 0, 0, 0);
                     m_max_events++;
                 }
             }
diff --git a/src/iohandlers.h b/src/iohandlers.h
index 312b38a..99ae447 100644
--- a/src/iohandlers.h
+++ b/src/iohandlers.h
@@ -409,7 +409,7 @@ public:
                      */
                     if (active_fd_list[i] != (int)INVALID_SOCKET) {
                         if (active_fd_list[i] != ifd) {
-                            EV_SET(&mp_kqueue_changes[change_num], active_fd_list[i], EVFILT_READ, EV_ADD | EV_OOBAND, 0, 0, 0);
+                            EV_SET(&mp_kqueue_changes[change_num], active_fd_list[i], EVFILT_READ, EV_FLAGS, 0, 0, 0);
                             change_num++;
                             m_max_events++;
                         }
diff --git a/src/ip_address.h b/src/ip_address.h
index 99b2a58..5f6fba0 100644
--- a/src/ip_address.h
+++ b/src/ip_address.h
@@ -38,12 +38,12 @@
 #include <afunix.h>
 typedef unsigned short int sa_family_t;
 
-#elif defined(__linux__) || defined(__APPLE__) 
+#elif defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <sys/un.h>      /* definitions for UNIX domain sockets */
 
-#endif // defined(__linux__) || defined(__APPLE__)
+#endif // defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)
 
 #include "os_abstract.h"
 #include <functional>
diff --git a/src/os_abstract.h b/src/os_abstract.h
index 1371ad4..cdec178 100644
--- a/src/os_abstract.h
+++ b/src/os_abstract.h
@@ -104,6 +104,7 @@ void *win_set_timer(void *p_timer);
 #include <fcntl.h>
 #include <netinet/in.h>
 #include <netdb.h>
+#include <unistd.h>
 
 #define INVALID_SOCKET (-1)
 
@@ -126,7 +127,6 @@ void *win_set_timer(void *p_timer);
 
 #elif __APPLE__
 
-#include <unistd.h>
 #include <mach/mach.h>
 #include <mach/thread_policy.h>
 #define __CPU_SETSIZE 1024                  // ported from Linux
@@ -138,7 +138,6 @@ void *win_set_timer(void *p_timer);
 
 #else
 
-#include <unistd.h>
 #include <sys/syscall.h>
 #include <endian.h>
 
-- 
2.43.0

